{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kurihara-ryo/cesarean-pasaran/blob/main/%E3%80%90%E8%A7%A3%E7%AD%94%E4%BE%8B%E3%80%91%E6%BC%94%E7%BF%92%E8%AA%B2%E9%A1%8C_%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E2%85%A2_1314.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#【課題】と書いてあるセルでは、自分でプログラムを作成してください。\n",
        "# 実行ボタンを押してプログラムの動作確認を行い、Google Classroomから提出してください。\n",
        "# 提出する際は、コメント(#から始まる部分)を削除せずに残してください。\n",
        "# 〆切が近いので、後回しにせず講義時間中に手を動かしてプログラムを作成すること。"
      ],
      "metadata": {
        "id": "Q5Oz_bNHEFRp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#### 統計的仮説検定\n",
        "# 日本の気温データを使用します。\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import gdown\n",
        "url='https://drive.google.com/uc?export=download&id=1WsveWEwULst41FLQmcgfBGQsejWf6COG'\n",
        "gdown.download(url, 'japan_temperature.csv', quiet=False)\n",
        "df = pd.read_csv('japan_temperature.csv')\n",
        "display(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 495
        },
        "id": "xQdxog4zhykY",
        "outputId": "ca10b4e8-f419-46ee-f637-6a6395bdaf14"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?export=download&id=1WsveWEwULst41FLQmcgfBGQsejWf6COG\n",
            "To: /content/japan_temperature.csv\n",
            "100%|██████████| 52.8k/52.8k [00:00<00:00, 7.31MB/s]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "        年  月   日    札幌    青森    秋田    福島    千葉    東京    横浜  ...    徳島    高知  \\\n",
              "0    2023  4  30  14.3  14.4  14.3  17.6  20.5  19.7  20.4  ...  18.4  18.7   \n",
              "1    2023  5   1  11.3  13.5  13.8  17.2  17.8  17.8  18.1  ...  17.5  18.2   \n",
              "2    2023  5   2  10.7  11.5  11.8  14.1  17.1  17.4  17.6  ...  16.9  16.9   \n",
              "3    2023  5   3  14.7  15.5  12.9  16.5  18.2  17.8  18.5  ...  17.8  17.6   \n",
              "4    2023  5   4  17.1  19.4  14.5  19.9  20.0  19.7  19.9  ...  20.0  19.2   \n",
              "..    ... ..  ..   ...   ...   ...   ...   ...   ...   ...  ...   ...   ...   \n",
              "362  2024  4  26  15.6  18.1  16.5  20.9  20.5  20.3  20.4  ...  17.8  17.9   \n",
              "363  2024  4  27  18.2  16.1  17.2  21.0  19.6  19.5  19.3  ...  18.2  18.8   \n",
              "364  2024  4  28  12.0  16.4  15.6  22.6  21.1  21.6  20.9  ...  19.9  20.7   \n",
              "365  2024  4  29  10.8  15.4  16.9  18.5  21.3  21.2  21.0  ...  18.8  19.2   \n",
              "366  2024  4  30  10.7  12.6  15.4  20.3  21.3  20.9  20.8  ...  19.6  21.5   \n",
              "\n",
              "       福岡    大分    佐賀    熊本    長崎    宮崎   鹿児島    那覇  \n",
              "0    16.7  17.7  16.9  16.3  16.0  17.8  17.2  23.0  \n",
              "1    16.8  17.1  16.6  16.5  16.1  18.0  18.3  22.1  \n",
              "2    17.7  16.0  17.7  18.0  17.2  16.7  18.5  22.8  \n",
              "3    19.7  17.9  19.2  18.9  18.2  16.6  19.5  23.5  \n",
              "4    20.2  19.9  18.1  17.9  17.1  18.5  19.7  24.4  \n",
              "..    ...   ...   ...   ...   ...   ...   ...   ...  \n",
              "362  17.4  16.8  18.0  17.7  17.5  18.2  18.2  24.4  \n",
              "363  19.2  16.7  19.9  20.0  19.2  18.6  20.7  26.0  \n",
              "364  20.8  18.7  22.4  23.1  21.9  21.0  22.8  26.3  \n",
              "365  21.4  18.2  21.6  21.7  21.4  21.1  22.4  25.1  \n",
              "366  18.1  19.5  20.2  20.1  19.7  22.7  21.4  26.4  \n",
              "\n",
              "[367 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-14438488-aca9-4265-b5df-cea987b750e4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>年</th>\n",
              "      <th>月</th>\n",
              "      <th>日</th>\n",
              "      <th>札幌</th>\n",
              "      <th>青森</th>\n",
              "      <th>秋田</th>\n",
              "      <th>福島</th>\n",
              "      <th>千葉</th>\n",
              "      <th>東京</th>\n",
              "      <th>横浜</th>\n",
              "      <th>...</th>\n",
              "      <th>徳島</th>\n",
              "      <th>高知</th>\n",
              "      <th>福岡</th>\n",
              "      <th>大分</th>\n",
              "      <th>佐賀</th>\n",
              "      <th>熊本</th>\n",
              "      <th>長崎</th>\n",
              "      <th>宮崎</th>\n",
              "      <th>鹿児島</th>\n",
              "      <th>那覇</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2023</td>\n",
              "      <td>4</td>\n",
              "      <td>30</td>\n",
              "      <td>14.3</td>\n",
              "      <td>14.4</td>\n",
              "      <td>14.3</td>\n",
              "      <td>17.6</td>\n",
              "      <td>20.5</td>\n",
              "      <td>19.7</td>\n",
              "      <td>20.4</td>\n",
              "      <td>...</td>\n",
              "      <td>18.4</td>\n",
              "      <td>18.7</td>\n",
              "      <td>16.7</td>\n",
              "      <td>17.7</td>\n",
              "      <td>16.9</td>\n",
              "      <td>16.3</td>\n",
              "      <td>16.0</td>\n",
              "      <td>17.8</td>\n",
              "      <td>17.2</td>\n",
              "      <td>23.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>11.3</td>\n",
              "      <td>13.5</td>\n",
              "      <td>13.8</td>\n",
              "      <td>17.2</td>\n",
              "      <td>17.8</td>\n",
              "      <td>17.8</td>\n",
              "      <td>18.1</td>\n",
              "      <td>...</td>\n",
              "      <td>17.5</td>\n",
              "      <td>18.2</td>\n",
              "      <td>16.8</td>\n",
              "      <td>17.1</td>\n",
              "      <td>16.6</td>\n",
              "      <td>16.5</td>\n",
              "      <td>16.1</td>\n",
              "      <td>18.0</td>\n",
              "      <td>18.3</td>\n",
              "      <td>22.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2023</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>10.7</td>\n",
              "      <td>11.5</td>\n",
              "      <td>11.8</td>\n",
              "      <td>14.1</td>\n",
              "      <td>17.1</td>\n",
              "      <td>17.4</td>\n",
              "      <td>17.6</td>\n",
              "      <td>...</td>\n",
              "      <td>16.9</td>\n",
              "      <td>16.9</td>\n",
              "      <td>17.7</td>\n",
              "      <td>16.0</td>\n",
              "      <td>17.7</td>\n",
              "      <td>18.0</td>\n",
              "      <td>17.2</td>\n",
              "      <td>16.7</td>\n",
              "      <td>18.5</td>\n",
              "      <td>22.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2023</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>14.7</td>\n",
              "      <td>15.5</td>\n",
              "      <td>12.9</td>\n",
              "      <td>16.5</td>\n",
              "      <td>18.2</td>\n",
              "      <td>17.8</td>\n",
              "      <td>18.5</td>\n",
              "      <td>...</td>\n",
              "      <td>17.8</td>\n",
              "      <td>17.6</td>\n",
              "      <td>19.7</td>\n",
              "      <td>17.9</td>\n",
              "      <td>19.2</td>\n",
              "      <td>18.9</td>\n",
              "      <td>18.2</td>\n",
              "      <td>16.6</td>\n",
              "      <td>19.5</td>\n",
              "      <td>23.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2023</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>17.1</td>\n",
              "      <td>19.4</td>\n",
              "      <td>14.5</td>\n",
              "      <td>19.9</td>\n",
              "      <td>20.0</td>\n",
              "      <td>19.7</td>\n",
              "      <td>19.9</td>\n",
              "      <td>...</td>\n",
              "      <td>20.0</td>\n",
              "      <td>19.2</td>\n",
              "      <td>20.2</td>\n",
              "      <td>19.9</td>\n",
              "      <td>18.1</td>\n",
              "      <td>17.9</td>\n",
              "      <td>17.1</td>\n",
              "      <td>18.5</td>\n",
              "      <td>19.7</td>\n",
              "      <td>24.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>2024</td>\n",
              "      <td>4</td>\n",
              "      <td>26</td>\n",
              "      <td>15.6</td>\n",
              "      <td>18.1</td>\n",
              "      <td>16.5</td>\n",
              "      <td>20.9</td>\n",
              "      <td>20.5</td>\n",
              "      <td>20.3</td>\n",
              "      <td>20.4</td>\n",
              "      <td>...</td>\n",
              "      <td>17.8</td>\n",
              "      <td>17.9</td>\n",
              "      <td>17.4</td>\n",
              "      <td>16.8</td>\n",
              "      <td>18.0</td>\n",
              "      <td>17.7</td>\n",
              "      <td>17.5</td>\n",
              "      <td>18.2</td>\n",
              "      <td>18.2</td>\n",
              "      <td>24.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>2024</td>\n",
              "      <td>4</td>\n",
              "      <td>27</td>\n",
              "      <td>18.2</td>\n",
              "      <td>16.1</td>\n",
              "      <td>17.2</td>\n",
              "      <td>21.0</td>\n",
              "      <td>19.6</td>\n",
              "      <td>19.5</td>\n",
              "      <td>19.3</td>\n",
              "      <td>...</td>\n",
              "      <td>18.2</td>\n",
              "      <td>18.8</td>\n",
              "      <td>19.2</td>\n",
              "      <td>16.7</td>\n",
              "      <td>19.9</td>\n",
              "      <td>20.0</td>\n",
              "      <td>19.2</td>\n",
              "      <td>18.6</td>\n",
              "      <td>20.7</td>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>2024</td>\n",
              "      <td>4</td>\n",
              "      <td>28</td>\n",
              "      <td>12.0</td>\n",
              "      <td>16.4</td>\n",
              "      <td>15.6</td>\n",
              "      <td>22.6</td>\n",
              "      <td>21.1</td>\n",
              "      <td>21.6</td>\n",
              "      <td>20.9</td>\n",
              "      <td>...</td>\n",
              "      <td>19.9</td>\n",
              "      <td>20.7</td>\n",
              "      <td>20.8</td>\n",
              "      <td>18.7</td>\n",
              "      <td>22.4</td>\n",
              "      <td>23.1</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21.0</td>\n",
              "      <td>22.8</td>\n",
              "      <td>26.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>2024</td>\n",
              "      <td>4</td>\n",
              "      <td>29</td>\n",
              "      <td>10.8</td>\n",
              "      <td>15.4</td>\n",
              "      <td>16.9</td>\n",
              "      <td>18.5</td>\n",
              "      <td>21.3</td>\n",
              "      <td>21.2</td>\n",
              "      <td>21.0</td>\n",
              "      <td>...</td>\n",
              "      <td>18.8</td>\n",
              "      <td>19.2</td>\n",
              "      <td>21.4</td>\n",
              "      <td>18.2</td>\n",
              "      <td>21.6</td>\n",
              "      <td>21.7</td>\n",
              "      <td>21.4</td>\n",
              "      <td>21.1</td>\n",
              "      <td>22.4</td>\n",
              "      <td>25.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>2024</td>\n",
              "      <td>4</td>\n",
              "      <td>30</td>\n",
              "      <td>10.7</td>\n",
              "      <td>12.6</td>\n",
              "      <td>15.4</td>\n",
              "      <td>20.3</td>\n",
              "      <td>21.3</td>\n",
              "      <td>20.9</td>\n",
              "      <td>20.8</td>\n",
              "      <td>...</td>\n",
              "      <td>19.6</td>\n",
              "      <td>21.5</td>\n",
              "      <td>18.1</td>\n",
              "      <td>19.5</td>\n",
              "      <td>20.2</td>\n",
              "      <td>20.1</td>\n",
              "      <td>19.7</td>\n",
              "      <td>22.7</td>\n",
              "      <td>21.4</td>\n",
              "      <td>26.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>367 rows × 32 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14438488-aca9-4265-b5df-cea987b750e4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-14438488-aca9-4265-b5df-cea987b750e4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-14438488-aca9-4265-b5df-cea987b750e4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f5befc5c-604f-48a3-8209-2879a5b83da1\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5befc5c-604f-48a3-8209-2879a5b83da1')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f5befc5c-604f-48a3-8209-2879a5b83da1 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_92778b13-1fc6-4439-9657-51292fd4560b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_92778b13-1fc6-4439-9657-51292fd4560b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 東京の2023年8月の気温と、2023年12月の気温を箱ひげ図で表示します。\n",
        "# ※「プログラミングⅡ」第13,14回の内容\n",
        "\n",
        "# 東京の2023年8月の気温を抜き出す\n",
        "df1 = df.query('年 == 2023 and 月 == 8')['東京']\n",
        "# 東京の2023年12月の気温を抜き出す\n",
        "df2 = df.query('年 == 2023 and 月 == 12')['東京']\n",
        "# 箱ひげ図を表示\n",
        "plt.boxplot([df1, df2], labels=['Tokyo August', 'Tokyo December'])\n",
        "\n",
        "# データの抜き出しは以下のように書いてもOK\n",
        "#df1 = df['東京'][(df['年'] == 2023) & (df['月'] == 8)]\n",
        "#df2 = df['東京'][(df['年'] == 2023) & (df['月'] == 12)]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 754
        },
        "id": "63bpXvB7qNwT",
        "outputId": "f5123a93-b7a6-4c5b-ecdb-651f503565cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-115-ad789aa12721>:9: MatplotlibDeprecationWarning: The 'labels' parameter of boxplot() has been renamed 'tick_labels' since Matplotlib 3.9; support for the old name will be dropped in 3.11.\n",
            "  plt.boxplot([df1, df2], labels=['Tokyo August', 'Tokyo December'])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'whiskers': [<matplotlib.lines.Line2D at 0x7f3928646e90>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928647890>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928667450>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928667dd0>],\n",
              " 'caps': [<matplotlib.lines.Line2D at 0x7f3928664350>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928664dd0>,\n",
              "  <matplotlib.lines.Line2D at 0x7f39286707d0>,\n",
              "  <matplotlib.lines.Line2D at 0x7f39286711d0>],\n",
              " 'boxes': [<matplotlib.lines.Line2D at 0x7f3928646510>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928666ad0>],\n",
              " 'medians': [<matplotlib.lines.Line2D at 0x7f39286658d0>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928671b50>],\n",
              " 'fliers': [<matplotlib.lines.Line2D at 0x7f3928666090>,\n",
              "  <matplotlib.lines.Line2D at 0x7f3928672510>],\n",
              " 'means': []}"
            ]
          },
          "metadata": {},
          "execution_count": 115
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 東京の8月と12月の気温差がどのくらい有意かを評価するため、統計検定のp値を計算します。\n",
        "# scipyモジュールのstatsを使うと、様々な種類の統計検定を行うことができます。\n",
        "from scipy import stats\n",
        "\n",
        "# t検定にはttest_ind()を使います。\n",
        "res = stats.ttest_ind(df1, df2)\n",
        "# 戻り値resに統計検定の結果が入っています。\n",
        "# p値はres.pvalueから調べられます。\n",
        "print('t-test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# p値は3.228e-43と非常に小さくなりました。\n",
        "# このことから東京の8月と12月の気温差は有意と言えそうです。\n",
        "# (こんな気温差は、偶然にはp=3.228e-43という非常に小さい確率でしか起こらない)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9IFopr82lW7k",
        "outputId": "16d7ba93-d754-48a9-fcb3-ceccf9f4744a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test p-value: 3.2279318178323934e-43\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 今度は那覇の8月と9月の気温を箱ひげ図で表示し、\n",
        "# 気温差がどのくらい有意かをt検定のp値で評価してみます。\n",
        "\n",
        "# 那覇2023年8月\n",
        "df1 = df['那覇'][(df['年'] == 2023) & (df['月'] == 8)]\n",
        "# 那覇2023年9月\n",
        "df2 = df['那覇'][(df['年'] == 2023) & (df['月'] == 9)]\n",
        "# 箱ひげ図\n",
        "plt.boxplot([df1, df2], labels=['Naha August', 'Naha September'])\n",
        "# t検定\n",
        "res = stats.ttest_ind(df1, df2)\n",
        "# p値を表示\n",
        "print('t-test p-value: {}\\n'.format(res.pvalue))\n",
        "\n",
        "# p値は0.596と大きくなりました。\n",
        "# このことから那覇の8月と9月の気温差はあまり有意ではないと言えそうです。\n",
        "# (このくらいの気温差は、確率p=0.596で偶然に起こり得る)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "rjRkLEydc1Ux",
        "outputId": "a9686554-6f3b-48a4-f8ff-5480bc969f1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test p-value: 0.5958180298236115\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-117-3dde8edb7fe6>:9: MatplotlibDeprecationWarning: The 'labels' parameter of boxplot() has been renamed 'tick_labels' since Matplotlib 3.9; support for the old name will be dropped in 3.11.\n",
            "  plt.boxplot([df1, df2], labels=['Naha August', 'Naha September'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】札幌の2023年5月と2023年9月の気温を2つの箱ひげ図として並べて表示してください。両者の気温差がどのくらい有意かについて、t検定を行いp値を表示してください。"
      ],
      "metadata": {
        "id": "TDEeXJrelKd_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 札幌2023年5月\n",
        "df1 = df['札幌'][(df['年'] == 2023) & (df['月'] == 5)]\n",
        "# 札幌2023年9月\n",
        "df2 = df['札幌'][(df['年'] == 2023) & (df['月'] == 9)]\n",
        "# 箱ひげ図\n",
        "plt.boxplot([df1, df2], labels=['Sapporo May', 'Sapporo September'])\n",
        "# t検定\n",
        "res = stats.ttest_ind(df1, df2)\n",
        "# p値を表示\n",
        "print('t-test p-value: {}\\n'.format(res.pvalue))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "LXYRhJwxlTYG",
        "outputId": "106f5bb7-b22d-40c7-e06d-d566e04fd35b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test p-value: 1.443849860046156e-14\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-118-c8ab9ad6c59f>:6: MatplotlibDeprecationWarning: The 'labels' parameter of boxplot() has been renamed 'tick_labels' since Matplotlib 3.9; support for the old name will be dropped in 3.11.\n",
            "  plt.boxplot([df1, df2], labels=['Sapporo May', 'Sapporo September'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# デフォルトでは、ttest_ind()は両側検定を行います。\n",
        "# 片側検定を行うには、引数alternativeを指定します。\n",
        "\n",
        "# 東京2023年8月、12月\n",
        "df1 = df.query('年 == 2023 and 月 == 8')['東京']\n",
        "df2 = df.query('年 == 2023 and 月 == 12')['東京']\n",
        "\n",
        "# t検定: 片側検定で8月の気温は12月より高いかを検定\n",
        "res = stats.ttest_ind(df1, df2, alternative='greater')\n",
        "print('t-test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# t検定: 片側検定で8月の気温は12月より低いかを検定\n",
        "res = stats.ttest_ind(df1, df2, alternative='less')\n",
        "print('t-test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# t検定: alternativeを指定しないと両側検定\n",
        "# 高い低いどちらでもいいので差があるかを検定\n",
        "res = stats.ttest_ind(df1, df2)\n",
        "print('t-test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# alternative='greater'ではp値が1.614e-43と非常に小さくなり、\n",
        "# alternative='less'ではp値が1.0と大きくなりました。\n",
        "# このことから、東京の8月の気温は12月より有意に高いと言えそうです。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "37bXCeyVtARk",
        "outputId": "de5e43b1-838b-4975-e63b-fe859b2ea7f4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test p-value: 1.6139659089161967e-43\n",
            "t-test p-value: 1.0\n",
            "t-test p-value: 3.2279318178323934e-43\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】大阪の2023年11月の気温が2023年5月の気温よりも低いかについて、t検定の片側検定を行いp値を表示してください。p値にもとづき、大阪の11月の気温は5月より有意に低いと言えるか、コメント欄に書いてください。"
      ],
      "metadata": {
        "id": "Nn-4Kv40jfqF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 大阪2023年11月、5月\n",
        "df1 = df.query('年 == 2023 and 月 == 11')['大阪']\n",
        "df2 = df.query('年 == 2023 and 月 == 5')['大阪']\n",
        "\n",
        "# t検定: 片側検定で11月の気温は5月より低いかを検定\n",
        "res = stats.ttest_ind(df1, df2, alternative='less')\n",
        "print('t-test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "#【解答欄】\n",
        "# p値にもとづき、大阪の11月の気温は5月より有意に低いと言えるか？\n",
        "# ここに解答を書いてください。\n",
        "# p値が1.334e-9と非常に小さいため、11月の気温は5月より有意に低いと言えそうである。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e5cXsdVVjWnG",
        "outputId": "bbd2af94-e214-493e-8a7a-2bb1c1950d75"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test p-value: 1.3342359538677827e-09\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#### ノンパラメトリック検定\n",
        "# t検定は母集団の分布が正規分布にしたがうことを仮定しています。\n",
        "# このような仮定を置かない検定方法をノンパラメトリック検定と呼びます。\n",
        "# Mann-Whitney U検定は、t検定のノンパラメトリック版のようなものです。\n",
        "# mannwhitneyu()を使用します。\n",
        "\n",
        "# 東京2023年8月、12月\n",
        "df1 = df.query('年 == 2023 and 月 == 8')['東京']\n",
        "df2 = df.query('年 == 2023 and 月 == 12')['東京']\n",
        "\n",
        "# Mann-Whitney U検定\n",
        "res = stats.mannwhitneyu(df1, df2)\n",
        "print('Mann-Whitney U test p-value: {}'.format(res.pvalue))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5AkG9F_LxeZJ",
        "outputId": "b94cb2de-fe14-4050-9e24-42f3d2bd0e84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mann-Whitney U test p-value: 1.3797858809052821e-11\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 片側検定を行うには、引数alternativeを指定します。\n",
        "\n",
        "# 宮崎2023年10月、6月\n",
        "df1 = df.query('年 == 2023 and 月 == 10')['宮崎']\n",
        "df2 = df.query('年 == 2023 and 月 == 6')['宮崎']\n",
        "\n",
        "# Mann-Whitney U検定: 片側検定で10月の気温は6月より高いかを検定\n",
        "res = stats.mannwhitneyu(df1, df2, alternative='greater')\n",
        "print('Mann-Whitney U test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# Mann-Whitney U検定: 片側検定で10月の気温は6月より低いかを検定\n",
        "res = stats.mannwhitneyu(df1, df2, alternative='less')\n",
        "print('Mann-Whitney U test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# alternative='greater'ではp値が約1.0と大きくなり、\n",
        "# alternative='less'ではp値が3.463e-7と非常に小さくなりました。\n",
        "# このことから、宮崎の10月の気温は6月より有意に低いと言えそうです。"
      ],
      "metadata": {
        "id": "dUrIinnxpoXO",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e48d0e2-3093-4a14-ce2b-f4f19fd01b43"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mann-Whitney U test p-value: 0.9999996785182981\n",
            "Mann-Whitney U test p-value: 3.463204272153716e-07\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】秋田の2023年7月の気温が2023年11月の気温よりも低いかについて、Mann-Whitney U検定の片側検定を行いp値を表示してください。p値にもとづき、秋田の7月の気温は11月より有意に低いと言えるか、コメント欄に書いてください。\n"
      ],
      "metadata": {
        "id": "wuB-R4pw6sZw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 秋田2023年7月、11月\n",
        "df1 = df.query('年 == 2023 and 月 == 7')['秋田']\n",
        "df2 = df.query('年 == 2023 and 月 == 11')['秋田']\n",
        "\n",
        "# Mann-Whitney U検定: 片側検定で7月の気温は11月より低いかを検定\n",
        "res = stats.mannwhitneyu(df1, df2, alternative='less')\n",
        "print('Mann-Whitney U p-value: {}'.format(res.pvalue))\n",
        "\n",
        "#【解答欄】\n",
        "# p値にもとづき、秋田の7月の気温は11月より有意に低いと言えるか？\n",
        "# ここに解答を書いてください。\n",
        "# p値が約1.0と大きいため、7月の気温は11月より有意に低いとは言えない。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jxn8CFwZ7q1x",
        "outputId": "31f1dfe9-2aa9-4081-9add-42628698aec8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mann-Whitney U p-value: 0.9999999999906748\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#### 対応のあるサンプルの検定\n",
        "# 2023年8月の気温を札幌と那覇の間で比較することを考えます。\n",
        "# 8/1の札幌と那覇の気温、8/2の札幌と那覇の気温...というように\n",
        "# 両者には日付ごとの対応関係が存在します。\n",
        "# このような場合、対応のあるサンプルの検定を用いるのが適切です。\n",
        "# 対応あり版のt検定にはttest_rel()を使用します。\n",
        "\n",
        "# 札幌と那覇、2023年8月\n",
        "df1 = df.query('年 == 2023 and 月 == 8')['札幌']\n",
        "df2 = df.query('年 == 2023 and 月 == 8')['那覇']\n",
        "\n",
        "# 対応ありのt検定\n",
        "res = stats.ttest_rel(df1, df2)\n",
        "print('t-test (related) p-value: {}'.format(res.pvalue))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zgx35RC9zTmb",
        "outputId": "370c885e-87fb-48e1-ba9f-07929917760e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test (related) p-value: 1.0099732258538987e-05\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 片側検定を行うには、引数alternativeを指定します。\n",
        "\n",
        "# 対応ありのt検定: 片側検定で札幌の気温は那覇より高いかを検定\n",
        "res = stats.ttest_rel(df1, df2, alternative='greater')\n",
        "print('t-test (related) p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# 対応ありのt検定: 片側検定で札幌の気温は那覇より低いかを検定\n",
        "res = stats.ttest_rel(df1, df2, alternative='less')\n",
        "print('t-test (related) p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# p値にもとづき、8月の札幌の気温は那覇より有意に低いと言えそうです。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NYc0ucH_XYt8",
        "outputId": "18ffdad3-6953-4bfd-9c4a-24db131a21e3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test (related) p-value: 0.9999949501338707\n",
            "t-test (related) p-value: 5.049866129269494e-06\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 対応のあるサンプルのノンパラメトリック検定を行いたい場合、\n",
        "# Wilcoxon符号順位検定wilcoxon()を使用します。\n",
        "\n",
        "# 青森と長崎、2023年10月\n",
        "df1 = df.query('年 == 2023 and 月 == 10')['青森']\n",
        "df2 = df.query('年 == 2023 and 月 == 10')['長崎']\n",
        "\n",
        "# Wilcoxon符号順位検定: 両側検定\n",
        "res = stats.wilcoxon(df1, df2)\n",
        "print('Wilcoxon signed rank test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# Wilcoxon符号順位検定: 片側検定 graeter\n",
        "res = stats.wilcoxon(df1, df2, alternative='greater')\n",
        "print('Wilcoxon signed rank test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# Wilcoxon符号順位検定: 片側検定 less\n",
        "res = stats.wilcoxon(df1, df2, alternative='less')\n",
        "print('Wilcoxon signed rank test p-value: {}'.format(res.pvalue))\n",
        "\n",
        "# p値にもとづき、10月の青森の気温は長崎より有意に低いと言えそうです。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "agDOLwpNYZpr",
        "outputId": "63cf9fb7-3299-4dc8-fb94-fb8ceae0ef62"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Wilcoxon signed rank test p-value: 1.1707396678370745e-06\n",
            "Wilcoxon signed rank test p-value: 0.9999994146301661\n",
            "Wilcoxon signed rank test p-value: 5.853698339185372e-07\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】2023年11月の鹿児島の気温が同月の東京の気温より高いかについて、対応ありのt検定の片側検定を行いp値を表示してください。p値にもとづき、11月の鹿児島の気温は東京より有意に高いと言えるか、コメント欄に書いてください。\n"
      ],
      "metadata": {
        "id": "H1MwZhZZbxur"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 鹿児島と東京、2023年11月\n",
        "df1 = df.query('年 == 2023 and 月 == 11')['鹿児島']\n",
        "df2 = df.query('年 == 2023 and 月 == 11')['東京']\n",
        "\n",
        "# 対応ありのt検定: 片側検定 greater\n",
        "res = stats.ttest_rel(df1, df2, alternative='greater')\n",
        "print('t-test (related) p-value: {}'.format(res.pvalue))\n",
        "\n",
        "#【解答欄】\n",
        "# p値にもとづき、11月の鹿児島の気温は東京より有意に高いと言えるか？\n",
        "# ここに解答を書いてください。\n",
        "# p値が6.352e-5と小さいため、11月の鹿児島の気温は東京より有意に高いと言えそうである。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L-hnsxFjbxgH",
        "outputId": "2c56a864-e058-4ad9-c25b-6bedd59bcedc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "t-test (related) p-value: 6.352054765013274e-05\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#### 相関解析のp値\n",
        "# ピアソン相関係数やスピアマン順位相関係数を計算する際、\n",
        "# その値がどのくらい有意に高いかをp値で評価することができます。\n",
        "# 例として、全期間での横浜の気温と大阪の気温のピアソン相関係数を計算し、\n",
        "# p値を評価します。\n",
        "\n",
        "# 横浜と大阪、全期間\n",
        "df1 = df['横浜']\n",
        "df2 = df['大阪']\n",
        "\n",
        "# 横浜と大阪の気温のピアソン相関係数\n",
        "correlation, p_value = stats.pearsonr(df1, df2)\n",
        "# 相関係数の値\n",
        "print('Pearson correlation coefficient:\\n{}'.format(correlation))\n",
        "# p値\n",
        "print('p-value:\\n{}'.format(p_value))\n",
        "\n",
        "# p値が非常に低いため、横浜と大阪の気温は有意に相関していると言えそうです。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R8TjqM4eXIGC",
        "outputId": "db683383-8cfb-43ae-aa55-353f5b9d923c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pearson correlation coefficient:\n",
            "0.9822738163459585\n",
            "p-value:\n",
            "1.709494697419644e-267\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 横浜と大阪の気温のスピアマン順位相関係数\n",
        "correlation, p_value = stats.spearmanr(df1, df2)\n",
        "# 相関係数の値\n",
        "print('Spearman rank correlation coefficient:\\n{}'.format(correlation))\n",
        "# p値\n",
        "print('p-value:\\n{}'.format(p_value))\n",
        "\n",
        "# 順位相関で見ても、有意に相関していると言えそうです。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DOp_91MPiWA_",
        "outputId": "c885766f-0240-4059-bdd9-35912210f3b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Spearman rank correlation coefficient:\n",
            "0.9783973632445986\n",
            "p-value:\n",
            "5.6836924959376925e-252\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 横浜と大阪の気温を散布図で表示してみます。\n",
        "# 散布図はほぼ直線に乗っており、散布図で見ても相関は高いと言えそうです。\n",
        "\n",
        "plt.scatter(df1, df2)\n",
        "plt.xlabel('Yokohama')\n",
        "plt.ylabel('Osaka')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "f5eenD2ii6zn",
        "outputId": "a2f62aea-0a61-4e0a-adfb-5072bcdf2f30"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Osaka')"
            ]
          },
          "metadata": {},
          "execution_count": 130
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】全期間での札幌の気温と青森の気温の関係を散布図で表示してください。札幌と青森の間のピアソン相関係数とそのp値を表示してください。"
      ],
      "metadata": {
        "id": "IvIHvBJwjg1-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 札幌と青森、全期間\n",
        "df1 = df['札幌']\n",
        "df2 = df['青森']\n",
        "\n",
        "# 札幌と青森の気温の散布図\n",
        "plt.scatter(df1, df2)\n",
        "plt.xlabel('Sapporo')\n",
        "plt.ylabel('Aomori')\n",
        "\n",
        "# 札幌と青森の気温のピアソン相関係数\n",
        "correlation, p_value = stats.pearsonr(df1, df2)\n",
        "# 相関係数の値\n",
        "print('Pearson correlation coefficient:\\n{}'.format(correlation))\n",
        "# p値\n",
        "print('p-value:\\n{}'.format(p_value))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "J-iwQrV_kKE5",
        "outputId": "b0626175-5e73-42f0-ac00-7a910f2879ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pearson correlation coefficient:\n",
            "0.9825562777339696\n",
            "p-value:\n",
            "9.351942700993013e-269\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#### 回帰曲線のフィッティング\n",
        "# 散布図に回帰曲線を追加する方法について見ていきます。\n",
        "# 例として、以下の2つのベクトルデータx, yを考えます。\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "x = np.array([0.0, 1.0, 2.0, 3.0, 4.0,  5.0,  6.0,  7.0,  8.0,  9.0])\n",
        "y = np.array([1.0, 3.6, 4.4, 7.9, 8.1, 12.0, 13.9, 14.1, 16.0, 19.0])\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')\n",
        "\n",
        "# この散布図に回帰曲線y = a * x + bを追加します。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "DnP47_RXnQ7Q",
        "outputId": "e8582cdf-516f-433e-e83b-5a2cc60c082f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 133
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# scipyのcurve_fit()を使うと、回帰曲線のフィッティングを行うことができます。\n",
        "from scipy.optimize import curve_fit\n",
        "\n",
        "# まず、回帰曲線の数式を関数として定義します。\n",
        "# 第1引数にはx、第2引数以降には数式内で使用する係数a, bを指定します。\n",
        "def f(x, a, b):\n",
        "    return a * x + b\n",
        "\n",
        "# 次に、curve_fit()を使って回帰曲線をフィッティングします。\n",
        "# 上で定義した関数fとデータx, yを引数として渡します。\n",
        "popt, pcov = curve_fit(f, x, y)\n",
        "\n",
        "# 戻り値poptには、フィッティング後の係数a, bの値が入っています。\n",
        "# 回帰曲線の数式がy = a * x + b = 1.93 * x + 1.29と求まりました。\n",
        "print('y = a * x + b')\n",
        "print('a = {}'.format(popt[0]))\n",
        "print('b = {}'.format(popt[1]))\n",
        "\n",
        "# 戻り値pcovには、フィッティングの信頼度を示す共分散の値が入っています。\n",
        "# 回帰曲線を描きたいだけの場合には使用しません。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IZD_E805rpis",
        "outputId": "0ae7b1cd-baf2-48ea-86a1-9662698a9d81"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "y = a * x + b\n",
            "a = 1.93454545484354\n",
            "b = 1.2945454540705141\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 散布図と回帰曲線を重ね描きします。\n",
        "\n",
        "# フィッティングした係数の値を使って、回帰曲線の縦軸の値を計算します。\n",
        "y_fit = popt[0] * x + popt[1]\n",
        "# 関数fを使って以下のように書いてもOK\n",
        "# y_fit = f(x, popt[0], popt[1])\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "# 回帰曲線\n",
        "plt.plot(x, y_fit, color='red') # 上で計算したy_fitを使う\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "VB1jLM7rv0fK",
        "outputId": "c76231f8-1840-43e6-af0f-042ce539a00c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 135
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】以下のベクトルデータx, yに対して、回帰曲線`y = a * x + b`をフィッティングして、a, bの値を表示してください。散布図と回帰曲線を重ね描きしてください。"
      ],
      "metadata": {
        "id": "P0DAs2jX5Ous"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# データ\n",
        "x = np.array([-2.0, -1.6, -1.1, -0.7, -0.2,  0.2,  0.7,  1.1,   1.6,   2.0])\n",
        "y = np.array([ 4.9,  3.2,  4.5,  1.8, -2.4, -4.3, -7.7, -9.2, -11.6, -14.3])\n",
        "\n",
        "# 回帰曲線の数式を関数として定義\n",
        "def f(x, a, b):\n",
        "    return a * x + b\n",
        "\n",
        "# curve_fit()を使って回帰曲線をフィッティング\n",
        "popt, pcov = curve_fit(f, x, y)\n",
        "\n",
        "# フィッティング後の係数a, bの値\n",
        "print('y = a * x + b')\n",
        "print('a = {}'.format(popt[0]))\n",
        "print('b = {}'.format(popt[1]))\n",
        "\n",
        "# 回帰曲線の縦軸の値を計算\n",
        "y_fit = f(x, popt[0], popt[1])\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "# 回帰曲線\n",
        "plt.plot(x, y_fit, color='red')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "mkgyci1Z5Nfu",
        "outputId": "041d04f3-175e-4639-fbf8-104e7bc1f727"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "y = a * x + b\n",
            "a = -5.07108433736663\n",
            "b = -3.509999999049452\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 136
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2次の回帰曲線をフィッティングする例です。\n",
        "# 以下の散布図に回帰曲線y = a * (x**2) + b * x + cを追加します。\n",
        "x = np.array([-5.0, -3.9, -2.8, -1.7, -0.6, 0.6,  1.7,  2.8,  3.9,  5.0])\n",
        "y = np.array([71.5, 48.4, 32.8, 17.3,  7.3, 4.9, 10.2, 24.5, 41.4, 68.8])\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "tYg20gnIxrab",
        "outputId": "a13b74f5-a2e6-4889-b39d-6fda5b7ee446"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 137
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 回帰曲線の数式を関数として定義\n",
        "# 係数a, b, cを引数として指定\n",
        "def f(x, a, b, c):\n",
        "    return a * x**2 + b * x + c\n",
        "\n",
        "# curve_fit()で回帰曲線をフィッティング\n",
        "popt, pcov = curve_fit(f, x, y)\n",
        "\n",
        "# フィッティング後の係数a, b, cの値\n",
        "print('y = a * x**2 + b * x + c')\n",
        "print('a = {}'.format(popt[0]))\n",
        "print('b = {}'.format(popt[1]))\n",
        "print('c = {}'.format(popt[2]))\n",
        "\n",
        "# 回帰曲線の縦軸の値を計算\n",
        "y_fit = popt[0] * x**2 + popt[1] * x + popt[2]\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "# 回帰曲線\n",
        "plt.plot(x, y_fit, color='red')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 538
        },
        "id": "48JD7cMFyY2s",
        "outputId": "8e25a3f5-87c0-4a02-c8ef-c5a6926f363e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "y = a * x**2 + b * x + c\n",
            "a = 2.5633123812083736\n",
            "b = -0.7558479388855985\n",
            "c = 6.410414930870738\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 138
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 回帰曲線がカクついています。\n",
        "# xの刻みを細かくして、回帰曲線を滑らかにしましょう。\n",
        "\n",
        "# np.arange()を使って、xの最小値から最大値まで等間隔に100個の値を作成\n",
        "x_fit = np.arange(x.min(), x.max(), (x.max()-x.min())/100)\n",
        "# x_fitに対する回帰曲線の値y_fitを計算\n",
        "y_fit = popt[0] * x_fit**2 + popt[1] * x_fit + popt[2]\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "# 回帰曲線\n",
        "plt.plot(x_fit, y_fit, color='red')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')\n",
        "\n",
        "# 回帰曲線が滑らかになりました。"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "f_KSgbu3zENs",
        "outputId": "3eb8a0ea-e3a7-4974-c71b-3ebb2fa8532b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 139
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "【課題】以下のベクトルデータx, yに対して、回帰曲線`y = exp(a * x) + b`をフィッティングして、a, bの値を表示してください。散布図と回帰曲線を重ね描きしてください。上の例にならって、100個の点からなる滑らかな曲線を引いてください。"
      ],
      "metadata": {
        "id": "lmtVzie03U2u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# データ\n",
        "x = np.array([-2.0, -1.6, -1.1, -0.7, -0.2, 0.2, 0.7, 1.1, 1.6, 2.0])\n",
        "y = np.array([ 0.8,  0.8,  1.3,  1.6,  2.0, 2.8, 4.0, 5.1, 7.1, 9.7])\n",
        "\n",
        "# 回帰曲線の数式を関数として定義\n",
        "def f(x, a, b):\n",
        "    return np.exp(a * x) + b\n",
        "\n",
        "# curve_fit()で回帰曲線をフィッティング\n",
        "popt, pcov = curve_fit(f, x, y)\n",
        "\n",
        "# フィッティング後の係数a, bの値\n",
        "print('y = exp(a * x) + b')\n",
        "print('a = {}'.format(popt[0]))\n",
        "print('b = {}'.format(popt[1]))\n",
        "\n",
        "# xの最小値から最大値まで等間隔に100個の値\n",
        "x_fit = np.arange(x.min(), x.max(), (x.max()-x.min())/100)\n",
        "# 回帰曲線の値y_fit\n",
        "y_fit = np.exp(popt[0] * x_fit) + popt[1]\n",
        "\n",
        "# 散布図\n",
        "plt.scatter(x, y)\n",
        "# 回帰曲線\n",
        "plt.plot(x_fit, y_fit, color='red')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "_hHyOKMA3wQr",
        "outputId": "6cdba5c5-feed-4706-8e1e-87249073a347"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "y = exp(a * x) + b\n",
            "a = 1.0864936493082609\n",
            "b = 1.2176745593129392\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'y')"
            ]
          },
          "metadata": {},
          "execution_count": 140
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
